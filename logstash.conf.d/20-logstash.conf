input {
   tcp { port => 6006 }
}

filter {
    csv {
       columns => [ "transaction_date", "registered_date", "spent_ammount", "received_ammount", "op_number", "to_code", "to_name", "to_bank", "to_from_account", "description", "owner", "account", "currency" ] 
       convert => { 
           "transaction_date" => "date" 
           "registered_date" => "date" 
           "received_ammount" => "float" 
           "spent_ammount" => "float"  
       }
    }    
    # Parse the actual transaction date from the message as it's the actual one when CC was used
    grok {
        match => { "description" => "Data utilizarii cardului (?<transaction_date>\d+/\d+/\d{4})" }
        overwrite => [ "transaction_date" ]
    }
    date {
        match => [ "transaction_date", "dd/MM/yyyy" ]
        remove_field => [ "registered_date", "transaction_date" ]
    }
    checksum {
        keys => [ "description", "@timestamp" ]
    }
    if ( [to_from_account] ) {
        elasticsearch {
            hosts => [ "localhost" ]
            query => "account:%{to_from_account}"
            index => "finance"
            fields => { "owner" => "to_owner" }
        }
    }
    if ( [to_owner] ) {
        mutate {
            add_field => { "internal" => true  }
        }
    } 
    else {
        mutate {
            add_field => { "internal" => false  }
        }
    }
}
